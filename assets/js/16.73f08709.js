(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{369:function(s,t,a){"use strict";a.r(t);var e=a(25),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"模块文件组织"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块文件组织"}},[s._v("#")]),s._v(" 模块文件组织")]),s._v(" "),a("p",[s._v("在 "),a("RouterLink",{attrs:{to:"/zh/vue-admin-next/guide/start.html#项目源码说明"}},[s._v("项目源码说明")]),s._v(" 中已经展示了每个模块的目录结构，下面主要说明在新增一个模块时，需要注意哪些事项。")],1),s._v(" "),a("h2",{attrs:{id:"模块索引文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块索引文件"}},[s._v("#")]),s._v(" 模块索引文件")]),s._v(" "),a("p",[s._v("由于整个项目采用的是单页面多模块的结构，因此需要我们在每个模块中通过 "),a("code",[s._v("index.js")]),s._v(" 统一导出模块内的 "),a("code",[s._v("dataflow")]),s._v("（包含 "),a("code",[s._v("dao")]),s._v("，"),a("code",[s._v("models")]),s._v("，"),a("code",[s._v("services")]),s._v("）、"),a("code",[s._v("router")]),s._v("、"),a("code",[s._v("store")]),s._v(" 等功能，然后由应用根目录 "),a("code",[s._v("src")]),s._v(" 的相应文件分别进行整合。")]),s._v(" "),a("p",[s._v("代码示例：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" dao "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./dao'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" services "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./services'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" models "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./models'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" stores "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./store'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" routes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./router'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dataflow "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  dao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  services"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" routes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dataflow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"页面及组件目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面及组件目录"}},[s._v("#")]),s._v(" 页面及组件目录")]),s._v(" "),a("h3",{attrs:{id:"页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面"}},[s._v("#")]),s._v(" 页面")]),s._v(" "),a("p",[s._v("模块内的页面统一放在 "),a("code",[s._v("[moduleName]/pages")]),s._v(" 目录下，且每个页面都应该有自己单独的目录。")]),s._v(" "),a("h3",{attrs:{id:"组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[s._v("#")]),s._v(" 组件")]),s._v(" "),a("p",[s._v("对于某个页面独有的组件，需要放置在对应页面的组件目录下： "),a("code",[s._v("[moduleName]/pages/[pageName]/components")]),s._v("；对于当前模块通用的组件，则放置在模块通用组件目录下： "),a("code",[s._v("[moduleName]/components")]),s._v("。")]),s._v(" "),a("p",[s._v("此外还有整个应用通用的组件，可以放在 "),a("code",[s._v("src/common/components")]),s._v(" 目录。")])])}),[],!1,null,null,null);t.default=r.exports}}]);